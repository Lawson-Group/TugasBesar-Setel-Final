<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAHdElNRQfnBQoDJRZ+qTVhAAADiklEQVR4Xu1bPYgTURBeUUQQQS0U
        EQmKuZ3d5HKFiuUV4qEgip3YiNhqI4Ktf6ggKFY26pnN5pRYqCeIhRq00Eo5RCzETg8UFIVDQT09592N
        l+Tt5L1sIlxmNx98TXbm5fu+5O3O5sfpoYtQzmbXlTzvDPIGslgCOFzy/fV0ONkIAYbQ9A/klMbfGMTV
        K667hEqTh4rvL0STHxnzsww979XwwMBSakkWwlxuE2daJ4Zwn1qShdB193KGOYa+v5PakgN8+5/jzDbh
        Y2pLDjCAMcZoM6qT4ipqlY8AII+m/mgmjQx8fxe1ywee2C5zJo0EOErtslEG2ICGJiMGLcR3zSlaQi6C
        QmFxzL0/S7wSnKZlZKI6OLgAjYzqxlolBnCIlpKH4UxmEb6Fb3PGWiUGsIWWkwU1z6OBR7qhmPyuQqQl
        5QDn/eUo/plmJj4BbtKScqAGFxT/MmKmDYobhYO+vrV4q/uWM9MGP6k7R1q6+0FT3rhmom1ikBdp6e5H
        4HmbUfRn3UQnDFx3Iy3/f6Guy+X+/mUmxvlEBie8HfhqfeNMtEu1jThdcUjyGoGz+G58gq/6EzZhVU1w
        1MoChe7Dk94vpnfuCfBBjdENl1E88D5SaCLAQWqNAI8fQca6s5sjPi9ms6v/ieYKTDw73ViHKceZh48f
        0+q6mwBPKo4zv+MAaK6/ptWIoPooruMASr6/jamRQYB7HQeAk9l2pkYKx9MewESqA8AR4EWqA8Bp9UKa
        A5goe14mnQEA/FQT8LQBtsBM+QH4/n6Sn84A1HcRJD+lAeCdJclP6RYA+ELyUxqA570h+b1zQBoDmCzl
        cgMkP30B4PR3nKTPgCuyUGwAyrz68Iakz4ArtFByAAdIdg1coYWSt8Bdkl0DU2Sj3AAAXpPsGthCMyUH
        MEaya2ALzZS8BYokuwamyEaxAaDW6A8ruEILZQYAcIskN4ItNlNiANWm320yxTaKCyB0XZfkRsE1WCgv
        AM87SXKj4BoslLcFAO6Q3CjYBjMlBvCQ5EbBNpgpbwsAXCK5UXANFkoMYIjkRsE1WCgqADwBPo3cAteD
        a7JQTgAA767n82tIKg+20UwJAaif6YyO5PMrSWZzaI2tsDEAHDLUY13CE+pbH+PgowObOJMmNgQgHrhP
        Yv2kLRH/1qgHBvCAM9qUAFupNRkICoUVeKk4j9fKiolofgRf/T3U1kMy4Dh/AWKoDuensRjrAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>